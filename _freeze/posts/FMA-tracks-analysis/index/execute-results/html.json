{
  "hash": "1cd12750535f57de8917180935f8c131",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Visualziation with the Free Music Archive\"\nauthor: \"Corinne McCumber\"\ndate: \"2024-12-12\"\ncategories: [code, analysis]\nimage: \"1024px-Sheet_music_EC2.jpg\"\n---\n\n\n\nLet's create some data visualizations with R using metadata from the Free Music Archive.\n\n## Dataset information\n\nThe dataset is called \"FMA: a dataset for music analysis\". Specifically, I will be investigating track (song) metadata from the Free Music Archive. The metadata dataset was downloaded from [GitHub](https://github.com/mdeff/fma/tree/master?tab=readme-ov-file), and it is also archived in the [Library of Congress](https://lccn.loc.gov/2018655052). It is listed under a CC BY 4.0 License, and a formal citation can be found below. Many thanks to the dataset creators, Michaël Defferrard, Kirell Benzi, Pierre Vandergheynst, and Xavier Bresson. I've looked at this dataset before, though never in R!\n\nTracks.csv contains metadata for 106,574 tracks in the full Free Music Archive dataset. Each row represents one song, also called a track. Columns contain song metadata, and columns of interst are listed below. Metadata is not complete for all songs, and rows missing data of interest will be dropped.\n\nSelected columns (as they are labeled after cleaning process) are as follows:\n\n- `artist_latitude`: Latitude information for a given artist, available for ~23% of the dataset.\n- `artist_longitude`: Longitude information for a given artist, available for ~23% of the dataset\n- `track_bit_rate`: Bit rate (number of bits per unit of time) of a track, commonly used as an indicator of audio quality.\n- `track_listens`: Number of times a track has been listened to as of archiving\n\n## Setup\n\nRun the following libraries.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(janitor)\nlibrary(sf)\nif(!require(\"maps\")) {install.packages(\"maps\")}\nlibrary(maps)\nif(!require(\"rnaturalearth\")) {install.packages(\"rnaturalearth\")}\nlibrary(rnaturalearth)\n```\n:::\n\n\n\nAnd load the needed data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(\"./data/tracks.csv\") %>%\n  select(1,22,23,25,34,48)\n```\n:::\n\n\n\n## Data cleaning\n\nThe headers for this data were multi-line when imported, so they need to be combined and cleaned.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclean_data <- data %>%\n  \n  # Fix column names\n  rename(\n    \"track_id\" = 1,\n    \"artist_id\" = 2,\n    \"artist_latitude\" = 3,\n    \"artist_longitude\" = 4,\n    \"track_bit_rate\" = 5,\n    \"track_listens\" = 6\n  ) %>%\n  \n  # Remove extra rows from multi-line header\n  drop_na(track_id) %>%\n\n  # Make all columns numeric for analysis\n  mutate(\n    track_id = as.numeric(track_id),\n    artist_id = as.numeric(artist_id),\n    artist_latitude = as.numeric(artist_latitude),\n    artist_longitude = as.numeric(artist_longitude),\n    track_bit_rate = as.numeric(track_bit_rate),\n    track_listens = as.numeric(track_listens)\n  )\n\nglimpse(clean_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 106,574\nColumns: 6\n$ track_id         <dbl> 2, 3, 5, 10, 20, 26, 30, 46, 48, 134, 135, 136, 137, …\n$ artist_id        <dbl> 1, 1, 1, 6, 4, 4, 4, 4, 4, 1, 52, 52, 53, 53, 54, 54,…\n$ artist_latitude  <dbl> 40.05832, 40.05832, 40.05832, NA, 51.89593, 51.89593,…\n$ artist_longitude <dbl> -74.405661, -74.405661, -74.405661, NA, 0.891874, 0.8…\n$ track_bit_rate   <dbl> 256000, 256000, 256000, 192000, 256000, 256000, 25600…\n$ track_listens    <dbl> 1293, 514, 1151, 50135, 361, 193, 612, 171, 173, 943,…\n```\n\n\n:::\n:::\n\n\nNow we can make some quick visualizations!\n\n## Visualization 1: World map of artists\n\nThe code below generates a world map (using the Robinson projection) showing the latitude and longitude for all artists who included that information in the dataset. Notably, this is only about 23% of the artists listed.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrs_use <- \"+proj=robin\"\n\npoint_data_sf <- clean_data %>%\n  select(artist_id, artist_longitude, artist_latitude) %>%\n  drop_na() %>%\n  st_as_sf(coords = c(\"artist_longitude\", \"artist_latitude\"), crs = 4326) %>%\n  st_transform(crs = crs_use)\n  \nworld_sf <- ne_countries(returnclass = \"sf\") %>%\n  st_transform(crs = crs_use)\n\nggplot(data = NULL) +\n  geom_sf(\n    data = world_sf,\n    color = \"#e0f3db\",\n    fill = \"#a8ddb5\"\n  ) +\n  coord_sf(crs = crs_use) +\n  geom_sf(\n    data = point_data_sf,\n    color = \"#000000\",\n    size = 1,\n    alpha = 0.25\n  ) +\n  labs(\n    x = NULL,\n    y = NULL,\n    title = \"World map of artist locations\",\n    subtitle = \"Using a Robinson Projection\",\n  ) +\n  theme(panel.background = element_rect(fill = '#43a2ca'))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/world-map-visualization-1.png){fig-alt='Robinson Projection world map of points showing artists\\' latitude and longitude, where the highest concentation are located in Europe then the US, indicating that data is not globally representative' width=80%}\n:::\n:::\n\n\n\nThis visualization tells us that our data can only be generalized for the US and Europe. Colors were chosen using [ColorBrewer](https://colorbrewer2.org) to ensure that they are legible for people who are colorblind. A Robinson projection was used to more naturally portray the entire earth on one image. It is \"neither equal-area nor conformal\", a compromise (\"Robinson projection\", n.d.)\n\n## Visualization 2: Audio quality and track popularity\n\nThe code below generates a scatter plot of track listens vs. track bit rate. [Bit rate](https://en.wikipedia.org/wiki/Bit_rate) is a common indicator of audio quality. I am curious about whether better audio quality makes a track more popular.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbit_listen_data <- clean_data %>%\n  select(track_id, track_bit_rate, track_listens) %>%\n  drop_na()\n\nggplot(\n  bit_listen_data,\n  aes(x = track_bit_rate, y = track_listens)\n) +\n  geom_point(color = \"#56B4E9\", alpha = 0.15) +\n  geom_smooth(method = lm, se = FALSE, color = '#000000', size = .25) +\n  geom_vline(\n    aes(xintercept = 96000, color = 'Speech or low-quality streaming'),\n    linetype = 'dashed'\n  ) +\n  geom_vline(\n    aes(xintercept = 192000, color = 'Medium quality'),\n    linetype = 'dotted'\n  ) +\n  geom_vline(\n    aes(xintercept = 256000, color = 'High quality'),\n    linetype = 'dotdash'\n  ) +\n  geom_vline(\n    aes(xintercept = 320000,color = 'Highest supported by MP3'),\n    linetype = 'twodash'\n  ) +\n  scale_color_manual(\n    name='Legend',\n    breaks = c(      \n      'Speech or low-quality streaming',\n      'Medium quality',\n      'High quality',\n      'Highest supported by MP3',\n      'Line of best fit'\n    ),\n    values=c(\n      'Speech or low-quality streaming'='#009E73',\n      'Medium quality'='#CC79A7',\n      'High quality'= '#D55E00',\n      'Highest supported by MP3' = '#F0E442',\n      'Line of best fit'='#000000'\n  )) +\n  labs(\n    x = \"Bits per second\",\n    y = \"Number of listens\",\n    title = \"Track listens vs. bit rate\",\n    subtitle = \"Linear best fit shown in black\"\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/bit-rate-listens-visualization-1.png){fig-alt='Scatterplot of track listens vs. track bit rate with a linear line of best fit, where points are clustered around common bit rate levels and there is a very small impact of bit rate on number of listens' width=80%}\n:::\n:::\n\n\nColors were taken from the Wong color palette as listed on [Coloring for Colorblindness](https://davidmathlogic.com/colorblind/#%23648FFF-%23785EF0-%23DC267F-%23FE6100-%23FFB000) to be accessible to those who are colorblind. The linear best fit line shows that there is a negligible relationship between a track's bit rate and its listens.\n\n## Conclusions\n\nBy completing some straightforward data visualization, we were able to check the geographic distribution of this dataset and to test a hypothesis about audio quality and song popularity. A good start to the exploratory data analysis!\n\n## References\n\nAlikhan, N.-F. (2022, May 20). Variations on map projections in R. Happykhan. https://happykhan.com/posts/map-projections-in-r/\n\nBit rate. (n.d.). In Wikipedia. Retrieved December 12, 2024, from https://en.wikipedia.org/w/index.php?title=Bit_rate&oldid=1261412342\n\nBrewer, C., Harrower, M., Sheesley, B., Woodruff, A., & Heyman, D. (2013). ColorBrewer: Color advice for maps. https://colorbrewer2.org/\n\nDefferrard, M., Benzi, K., Vandergheynst, P., & Bresson, X. (2017). FMA: A dataset for music analysis [Dataset]. https://github.com/mdeff/fma.\n\nKobus, L. (2021). Sheet music EC2 [Graphic]. Wikimedia Commons. https://commons.wikimedia.org/wiki/File:Sheet_music_EC2.jpg\n\nNichols, D. (n.d.). Coloring for Colorblindness. Retrieved December 12, 2024, from http://www.davidmathlogic.com/colorblind/\n\nRobinson projection. (n.d.). In Wikipedia. Retrieved December 12, 2024, from https://en.wikipedia.org/w/index.php?title=Robinson_projection&oldid=1255419564\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}